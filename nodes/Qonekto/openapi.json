{
  "openapi": "3.0.3",
  "info": {
    "title": "Qonekto API Documentation",
    "description": "",
    "version": "0.5.0"
  },
  "servers": [
    {
      "url": "https://app.qonekto.de"
    }
  ],
  "tags": [
    {
      "name": "Kunde",
      "description": ""
    },
    {
      "name": "Listen",
      "description": ""
    },
    {
      "name": "Panda",
      "description": ""
    },
    {
      "name": "Pipeline",
      "description": ""
    },
    {
      "name": "Misc",
      "description": ""
    }
  ],
  "components": {
    "securitySchemes": {
      "default": {
        "type": "http",
        "scheme": "bearer",
        "description": "You can generate a token by visiting Admin > **API Tokens**.\n\nThe Token can also be passed as `_token` GET or POST parameter."
      }
    }
  },
  "security": [
    {
      "default": []
    }
  ],
  "paths": {
    "/api/{tenant}/kunde": {
      "get": {
        "summary": "List Kunden",
        "operationId": "listKunden",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Changes per_page used for pagination from default 25 to max 100.",
            "example": 50,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Changes per_page used for pagination from default 25 to max 100.",
              "example": 50,
              "nullable": false
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Searches for all Kunden beginning with keyword in `vorname`, `nachname` or a match in any `kommunikation` fields. Cannot use filter parameter when passing search parameter.",
            "example": "quia",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Searches for all Kunden beginning with keyword in `vorname`, `nachname` or a match in any `kommunikation` fields. Cannot use filter parameter when passing search parameter.",
              "example": "quia",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "data": [
                      {
                        "created_at": "2024-02-21T15:12:22.000000Z",
                        "updated_at": "2024-02-21T15:12:22.000000Z",
                        "ameise_id": "57000",
                        "nachname": "Bader",
                        "vorname": "Jolanta",
                        "titel": "Herr Prof.",
                        "strasse": "Förstergasse 20a",
                        "plz": "38813",
                        "ort": "Saarlouis",
                        "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                        "beruf": "",
                        "per_du": true,
                        "nationalitaet": "",
                        "benutzername_simplr": "amalie.pietsch",
                        "verstorben": false,
                        "vermittler_id": "XML4V3",
                        "anrede_id": 10,
                        "anrede": "sed",
                        "juristische_person": false,
                        "land_id": "AT",
                        "land": "Costa Rica",
                        "rechtsform_id": 0,
                        "rechtsform": null
                      },
                      {
                        "created_at": "2024-02-21T15:12:22.000000Z",
                        "updated_at": "2024-02-21T15:12:22.000000Z",
                        "ameise_id": "57000",
                        "nachname": "Bader",
                        "vorname": "Jolanta",
                        "titel": "Herr Prof.",
                        "strasse": "Förstergasse 20a",
                        "plz": "38813",
                        "ort": "Saarlouis",
                        "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                        "beruf": "",
                        "per_du": true,
                        "nationalitaet": "",
                        "benutzername_simplr": "amalie.pietsch",
                        "verstorben": false,
                        "vermittler_id": "XML4V3",
                        "anrede_id": 10,
                        "anrede": "sed",
                        "juristische_person": false,
                        "land_id": "AT",
                        "land": "Costa Rica",
                        "rechtsform_id": 0,
                        "rechtsform": null
                      }
                    ],
                    "links": {
                      "first": "/?page=1",
                      "last": "/?page=1",
                      "prev": null,
                      "next": null
                    },
                    "meta": {
                      "current_page": 1,
                      "from": 1,
                      "last_page": 1,
                      "links": [
                        {
                          "url": null,
                          "label": "&laquo; Zurück",
                          "active": false
                        },
                        {
                          "url": "/?page=1",
                          "label": "1",
                          "active": true
                        },
                        {
                          "url": null,
                          "label": "Weiter &raquo;",
                          "active": false
                        }
                      ],
                      "path": "/",
                      "per_page": 25,
                      "to": 2,
                      "total": 2
                    }
                  },
                  "properties": {
                    "data": {
                      "type": "array",
                      "example": [
                        {
                          "created_at": "2024-02-21T15:12:22.000000Z",
                          "updated_at": "2024-02-21T15:12:22.000000Z",
                          "ameise_id": "57000",
                          "nachname": "Bader",
                          "vorname": "Jolanta",
                          "titel": "Herr Prof.",
                          "strasse": "Förstergasse 20a",
                          "plz": "38813",
                          "ort": "Saarlouis",
                          "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                          "beruf": "",
                          "per_du": true,
                          "nationalitaet": "",
                          "benutzername_simplr": "amalie.pietsch",
                          "verstorben": false,
                          "vermittler_id": "XML4V3",
                          "anrede_id": 10,
                          "anrede": "sed",
                          "juristische_person": false,
                          "land_id": "AT",
                          "land": "Costa Rica",
                          "rechtsform_id": 0,
                          "rechtsform": null
                        },
                        {
                          "created_at": "2024-02-21T15:12:22.000000Z",
                          "updated_at": "2024-02-21T15:12:22.000000Z",
                          "ameise_id": "57000",
                          "nachname": "Bader",
                          "vorname": "Jolanta",
                          "titel": "Herr Prof.",
                          "strasse": "Förstergasse 20a",
                          "plz": "38813",
                          "ort": "Saarlouis",
                          "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                          "beruf": "",
                          "per_du": true,
                          "nationalitaet": "",
                          "benutzername_simplr": "amalie.pietsch",
                          "verstorben": false,
                          "vermittler_id": "XML4V3",
                          "anrede_id": 10,
                          "anrede": "sed",
                          "juristische_person": false,
                          "land_id": "AT",
                          "land": "Costa Rica",
                          "rechtsform_id": 0,
                          "rechtsform": null
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "example": "2024-02-21T15:12:22.000000Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2024-02-21T15:12:22.000000Z"
                          },
                          "ameise_id": {
                            "type": "string",
                            "example": "57000"
                          },
                          "nachname": {
                            "type": "string",
                            "example": "Bader"
                          },
                          "vorname": {
                            "type": "string",
                            "example": "Jolanta"
                          },
                          "titel": {
                            "type": "string",
                            "example": "Herr Prof."
                          },
                          "strasse": {
                            "type": "string",
                            "example": "Förstergasse 20a"
                          },
                          "plz": {
                            "type": "string",
                            "example": "38813"
                          },
                          "ort": {
                            "type": "string",
                            "example": "Saarlouis"
                          },
                          "geburtsdatum": {
                            "type": "string",
                            "example": "1990-07-22T10:45:18.000000Z"
                          },
                          "beruf": {
                            "type": "string",
                            "example": ""
                          },
                          "per_du": {
                            "type": "boolean",
                            "example": true
                          },
                          "nationalitaet": {
                            "type": "string",
                            "example": ""
                          },
                          "benutzername_simplr": {
                            "type": "string",
                            "example": "amalie.pietsch"
                          },
                          "verstorben": {
                            "type": "boolean",
                            "example": false
                          },
                          "vermittler_id": {
                            "type": "string",
                            "example": "XML4V3"
                          },
                          "anrede_id": {
                            "type": "integer",
                            "example": 10
                          },
                          "anrede": {
                            "type": "string",
                            "example": "sed"
                          },
                          "juristische_person": {
                            "type": "boolean",
                            "example": false
                          },
                          "land_id": {
                            "type": "string",
                            "example": "AT"
                          },
                          "land": {
                            "type": "string",
                            "example": "Costa Rica"
                          },
                          "rechtsform_id": {
                            "type": "integer",
                            "example": 0
                          },
                          "rechtsform": {
                            "type": "string",
                            "example": null
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "example": "/?page=1"
                        },
                        "last": {
                          "type": "string",
                          "example": "/?page=1"
                        },
                        "prev": {
                          "type": "string",
                          "example": null
                        },
                        "next": {
                          "type": "string",
                          "example": null
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "/?page=1",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": null,
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "path": {
                          "type": "string",
                          "example": "/"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 25
                        },
                        "to": {
                          "type": "integer",
                          "example": 2
                        },
                        "total": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Kunde"
        ]
      },
      "post": {
        "summary": "Create Kunde",
        "operationId": "createKunde",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "mitteilung-benutzername",
            "description": "When set, will send customer the account username via email (if given).",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "When set, will send customer the account username via email (if given).",
              "example": true,
              "nullable": false
            }
          },
          {
            "in": "query",
            "name": "mitteilung-passwort-link",
            "description": "When set, will send customer a link to reset his account password via email (if given).",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "When set, will send customer a link to reset his account password via email (if given).",
              "example": true,
              "nullable": false
            }
          },
          {
            "in": "query",
            "name": "mitteilung-erstinfo-unterbinden",
            "description": "When set, will **not** send customer the Erstinformationen nach §11 der Vermittlerverordnung via email (if given).",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "When set, will **not** send customer the Erstinformationen nach §11 der Vermittlerverordnung via email (if given).",
              "example": true,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "created_at": "2024-02-21T15:12:22.000000Z",
                    "updated_at": "2024-02-21T15:12:22.000000Z",
                    "ameise_id": "57000",
                    "nachname": "Bader",
                    "vorname": "Jolanta",
                    "titel": "Herr Prof.",
                    "strasse": "Förstergasse 20a",
                    "plz": "38813",
                    "ort": "Saarlouis",
                    "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                    "beruf": "",
                    "per_du": true,
                    "nationalitaet": "",
                    "benutzername_simplr": "amalie.pietsch",
                    "verstorben": false,
                    "vermittler_id": "XML4V3",
                    "anrede_id": 10,
                    "anrede": "sed",
                    "juristische_person": false,
                    "land_id": "AT",
                    "land": "Costa Rica",
                    "rechtsform_id": 0,
                    "rechtsform": null,
                    "email": null,
                    "telefon": null,
                    "mobil": null,
                    "website": null,
                    "fax": null,
                    "kommunikationen": []
                  },
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "ameise_id": {
                      "type": "string",
                      "example": "57000"
                    },
                    "nachname": {
                      "type": "string",
                      "example": "Bader"
                    },
                    "vorname": {
                      "type": "string",
                      "example": "Jolanta"
                    },
                    "titel": {
                      "type": "string",
                      "example": "Herr Prof."
                    },
                    "strasse": {
                      "type": "string",
                      "example": "Förstergasse 20a"
                    },
                    "plz": {
                      "type": "string",
                      "example": "38813"
                    },
                    "ort": {
                      "type": "string",
                      "example": "Saarlouis"
                    },
                    "geburtsdatum": {
                      "type": "string",
                      "example": "1990-07-22T10:45:18.000000Z"
                    },
                    "beruf": {
                      "type": "string",
                      "example": ""
                    },
                    "per_du": {
                      "type": "boolean",
                      "example": true
                    },
                    "nationalitaet": {
                      "type": "string",
                      "example": ""
                    },
                    "benutzername_simplr": {
                      "type": "string",
                      "example": "amalie.pietsch"
                    },
                    "verstorben": {
                      "type": "boolean",
                      "example": false
                    },
                    "vermittler_id": {
                      "type": "string",
                      "example": "XML4V3"
                    },
                    "anrede_id": {
                      "type": "integer",
                      "example": 10
                    },
                    "anrede": {
                      "type": "string",
                      "example": "sed"
                    },
                    "juristische_person": {
                      "type": "boolean",
                      "example": false
                    },
                    "land_id": {
                      "type": "string",
                      "example": "AT"
                    },
                    "land": {
                      "type": "string",
                      "example": "Costa Rica"
                    },
                    "rechtsform_id": {
                      "type": "integer",
                      "example": 0
                    },
                    "rechtsform": {
                      "type": "string",
                      "example": null
                    },
                    "email": {
                      "type": "string",
                      "example": null
                    },
                    "telefon": {
                      "type": "string",
                      "example": null
                    },
                    "mobil": {
                      "type": "string",
                      "example": null
                    },
                    "website": {
                      "type": "string",
                      "example": null
                    },
                    "fax": {
                      "type": "string",
                      "example": null
                    },
                    "kommunikationen": {
                      "type": "array",
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Kunde"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vermittler_id": {
                    "type": "string",
                    "description": "Standard-Wert ist der Vermittler des Ameise Benutzers mit dem die API-Verbidung erstellt wurde. The <code>ameise_id</code> of an existing record in the ameise_vermittler table.",
                    "example": null,
                    "nullable": true
                  },
                  "anrede_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_anreden table.",
                    "example": "quia",
                    "nullable": false
                  },
                  "vorname": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld den Ansprechpartner. value darf maximal 255 Zeichen haben.",
                    "example": "juyjlbqswiwvcmyv",
                    "nullable": false
                  },
                  "nachname": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld den Firmennamen. value darf maximal 255 Zeichen haben.",
                    "example": "ipndicqibuxjajfu",
                    "nullable": false
                  },
                  "titel": {
                    "type": "string",
                    "description": "Wird nicht verwendet, wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist. value darf maximal 255 Zeichen haben.",
                    "example": "lljxbbggsfxqdren",
                    "nullable": true
                  },
                  "strasse": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "loimiqxcpiayhneo",
                    "nullable": true
                  },
                  "plz": {
                    "type": "string",
                    "description": "value muss zwischen 4 und 5 Stellen haben.",
                    "example": "56957",
                    "nullable": true
                  },
                  "ort": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "uyjlbqswiwvcmyvi",
                    "nullable": true
                  },
                  "land_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_laender table.",
                    "example": "quia",
                    "nullable": false
                  },
                  "geburtsdatum": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld das Gründungsdatum. Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                    "example": "2025-09-25,25.09.2025",
                    "nullable": true
                  },
                  "beruf": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld die Branche. value darf maximal 255 Zeichen haben.",
                    "example": "juyjlbqswiwvcmyv",
                    "nullable": true
                  },
                  "per_du": {
                    "type": "boolean",
                    "description": "Wird aktuell nicht an die Ameise übergeben.",
                    "example": true,
                    "nullable": false
                  },
                  "nationalitaet": {
                    "type": "string",
                    "description": "Wird aktuell nicht an die Ameise übergeben. value darf maximal 255 Zeichen haben.",
                    "example": "ipndicqibuxjajfu",
                    "nullable": true
                  },
                  "rechtsform_id": {
                    "type": "string",
                    "description": "Wird aktuell nicht an die Ameise übergeben. Benötigt wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist. The <code>ameise_id</code> of an existing record in the ameise_rechtsformen table.",
                    "example": null,
                    "nullable": true
                  },
                  "benutzername_simplr": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "lljxbbggsfxqdren",
                    "nullable": true
                  },
                  "verstorben": {
                    "type": "boolean",
                    "description": "Wird aktuell nicht an die Ameise übergeben.",
                    "example": true,
                    "nullable": false
                  },
                  "kommunikation": {
                    "type": "object",
                    "description": "Alle Standard-Kommunikationsdaten für diesen Kunden.",
                    "example": {
                      "email": "info@muster.test",
                      "website": "https://url.test"
                    },
                    "nullable": true,
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "value muss eine gültige E-Mail-Adresse sein.",
                        "example": "info@muster.test",
                        "nullable": true
                      },
                      "telefon": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "mobil": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "website": {
                        "type": "string",
                        "description": "Must be a valid URL.",
                        "example": "https://url.test",
                        "nullable": true
                      },
                      "fax": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      }
                    }
                  },
                  "details": {
                    "type": "object",
                    "description": "Kunden-Details als Objekt mit Feld-ID Schlüssel und dem entsprechenden Wert.",
                    "example": {
                      "feld_1_float": 12.2,
                      "feld_2_int": 3,
                      "feld_3_text": "test",
                      "feld_4_bool": false,
                      "feld_5_date": "2024-01-23"
                    },
                    "nullable": true,
                    "properties": {
                      "feld_id_typ_text": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_boolean": {
                        "type": "boolean",
                        "description": "",
                        "example": true,
                        "nullable": true
                      },
                      "feld_id_typ_auswahl": {
                        "type": "string",
                        "description": "",
                        "example": "qui",
                        "nullable": true,
                        "enum": [
                          "quo",
                          "dignissimos",
                          "qui",
                          "est",
                          "fugit"
                        ]
                      },
                      "feld_id_typ_zahl": {
                        "type": "integer",
                        "description": "",
                        "example": 16,
                        "nullable": true
                      },
                      "feld_id_typ_betrag_2": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_datum": {
                        "type": "string",
                        "description": "Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                        "example": "2025-09-25,25.09.2025",
                        "nullable": true
                      }
                    }
                  }
                },
                "required": [
                  "anrede_id",
                  "vorname",
                  "nachname",
                  "land_id"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/kunde/filter": {
      "post": {
        "summary": "Filter Kunden",
        "operationId": "filterKunden",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    {
                      "created_at": "2024-02-21T15:12:22.000000Z",
                      "updated_at": "2024-02-21T15:12:22.000000Z",
                      "ameise_id": "57000",
                      "nachname": "Bader",
                      "vorname": "Jolanta",
                      "titel": "Herr Prof.",
                      "strasse": "Förstergasse 20a",
                      "plz": "38813",
                      "ort": "Saarlouis",
                      "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                      "beruf": "",
                      "per_du": true,
                      "nationalitaet": "",
                      "benutzername_simplr": "amalie.pietsch",
                      "verstorben": false,
                      "vermittler_id": "XML4V3",
                      "anrede_id": 10,
                      "land_id": "AT",
                      "rechtsform_id": 0
                    },
                    {
                      "created_at": "2024-02-21T15:12:22.000000Z",
                      "updated_at": "2024-02-21T15:12:22.000000Z",
                      "ameise_id": "57000",
                      "nachname": "Bader",
                      "vorname": "Jolanta",
                      "titel": "Herr Prof.",
                      "strasse": "Förstergasse 20a",
                      "plz": "38813",
                      "ort": "Saarlouis",
                      "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                      "beruf": "",
                      "per_du": true,
                      "nationalitaet": "",
                      "benutzername_simplr": "amalie.pietsch",
                      "verstorben": false,
                      "vermittler_id": "XML4V3",
                      "anrede_id": 10,
                      "land_id": "AT",
                      "rechtsform_id": 0
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Kunde"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vermittler_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_vermittler table.",
                    "example": null,
                    "nullable": true
                  },
                  "anrede_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_anreden table.",
                    "example": null,
                    "nullable": true
                  },
                  "vorname": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "jjuyjlbqswiwvcmy",
                    "nullable": true
                  },
                  "nachname": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "vipndicqibuxjajf",
                    "nullable": true
                  },
                  "titel": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "ulljxbbggsfxqdre",
                    "nullable": true
                  },
                  "strasse": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "nloimiqxcpiayhne",
                    "nullable": true
                  },
                  "plz": {
                    "type": "string",
                    "description": "value muss zwischen 4 und 5 Stellen haben.",
                    "example": "56957",
                    "nullable": true
                  },
                  "ort": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "uyjlbqswiwvcmyvi",
                    "nullable": true
                  },
                  "land_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_laender table.",
                    "example": null,
                    "nullable": true
                  },
                  "geburtsdatum": {
                    "type": "string",
                    "description": "Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                    "example": "2025-09-25,25.09.2025",
                    "nullable": true
                  },
                  "beruf": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "pndicqibuxjajful",
                    "nullable": true
                  },
                  "per_du": {
                    "type": "boolean",
                    "description": "",
                    "example": false,
                    "nullable": false
                  },
                  "nationalitaet": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "ljxbbggsfxqdrenl",
                    "nullable": true
                  },
                  "rechtsform_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_rechtsformen table.",
                    "example": null,
                    "nullable": true
                  },
                  "benutzername_simplr": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "oimiqxcpiayhneos",
                    "nullable": true
                  },
                  "verstorben": {
                    "type": "boolean",
                    "description": "",
                    "example": false,
                    "nullable": false
                  },
                  "kommunikation": {
                    "type": "object",
                    "description": "",
                    "example": null,
                    "nullable": true,
                    "properties": {
                      "email_any": {
                        "type": "string",
                        "description": "value muss eine gültige E-Mail-Adresse sein.",
                        "example": "iyost@example.com",
                        "nullable": true
                      },
                      "email_private": {
                        "type": "string",
                        "description": "value muss eine gültige E-Mail-Adresse sein.",
                        "example": "zkunze@example.org",
                        "nullable": true
                      },
                      "email_business": {
                        "type": "string",
                        "description": "value muss eine gültige E-Mail-Adresse sein.",
                        "example": "iauer@example.net",
                        "nullable": true
                      },
                      "telefon_any": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "telefon_private": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "telefon_business": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "mobil_any": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "mobil_private": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "mobil_business": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "website_any": {
                        "type": "string",
                        "description": "Must be a valid URL.",
                        "example": "http://www.prosacco.com/quis-qui-laudantium-doloribus-architecto-et",
                        "nullable": true
                      },
                      "website_private": {
                        "type": "string",
                        "description": "Must be a valid URL.",
                        "example": "https://herzog.net/at-tempora-omnis-distinctio-vero-excepturi.html",
                        "nullable": true
                      },
                      "website_business": {
                        "type": "string",
                        "description": "Must be a valid URL.",
                        "example": "https://lesch.com/eius-qui-iure-repellendus-ipsam-reiciendis-consequuntur-quasi-quisquam.html",
                        "nullable": true
                      },
                      "fax_any": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "fax_private": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "fax_business": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      }
                    }
                  },
                  "details": {
                    "type": "object",
                    "description": "",
                    "example": null,
                    "nullable": true,
                    "properties": {
                      "feld_id_typ_text": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_boolean": {
                        "type": "boolean",
                        "description": "",
                        "example": false,
                        "nullable": true
                      },
                      "feld_id_typ_auswahl": {
                        "type": "string",
                        "description": "",
                        "example": "nesciunt",
                        "nullable": true,
                        "enum": [
                          "illum",
                          "accusantium",
                          "nesciunt",
                          "velit",
                          "est"
                        ]
                      },
                      "feld_id_typ_zahl": {
                        "type": "integer",
                        "description": "",
                        "example": 16,
                        "nullable": true
                      },
                      "feld_id_typ_betrag_2": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_datum": {
                        "type": "string",
                        "description": "Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                        "example": "2025-09-25,25.09.2025",
                        "nullable": true
                      }
                    }
                  },
                  "_skip": {
                    "type": "integer",
                    "description": "How many items to skip in results.",
                    "example": 0,
                    "nullable": false
                  },
                  "_limit": {
                    "type": "integer",
                    "description": "How many items to return in results, defaults to 25, min 1, max 100.",
                    "example": 25,
                    "nullable": false
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/kunde/upsert": {
      "put": {
        "summary": "Upsert Kunde",
        "operationId": "upsertKunde",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "mitteilung-benutzername",
            "description": "Only if customer could not be found. When set, will send customer the account username via email (if given).",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only if customer could not be found. When set, will send customer the account username via email (if given).",
              "example": true,
              "nullable": false
            }
          },
          {
            "in": "query",
            "name": "mitteilung-passwort-link",
            "description": "Only if customer could not be found. When set, will send customer a link to reset his account password via email (if given).",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only if customer could not be found. When set, will send customer a link to reset his account password via email (if given).",
              "example": true,
              "nullable": false
            }
          },
          {
            "in": "query",
            "name": "mitteilung-erstinfo-unterbinden",
            "description": "Only if customer could not be found. When set, will **not** send customer the Erstinformationen nach §11 der Vermittlerverordnung via email (if given).",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only if customer could not be found. When set, will **not** send customer the Erstinformationen nach §11 der Vermittlerverordnung via email (if given).",
              "example": true,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "created_at": "2024-02-21T15:12:22.000000Z",
                    "updated_at": "2024-02-21T15:12:22.000000Z",
                    "ameise_id": "57000",
                    "nachname": "Bader",
                    "vorname": "Jolanta",
                    "titel": "Herr Prof.",
                    "strasse": "Förstergasse 20a",
                    "plz": "38813",
                    "ort": "Saarlouis",
                    "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                    "beruf": "",
                    "per_du": true,
                    "nationalitaet": "",
                    "benutzername_simplr": "amalie.pietsch",
                    "verstorben": false,
                    "vermittler_id": "XML4V3",
                    "anrede_id": 10,
                    "anrede": "sed",
                    "juristische_person": false,
                    "land_id": "AT",
                    "land": "Costa Rica",
                    "rechtsform_id": 0,
                    "rechtsform": null,
                    "email": null,
                    "telefon": null,
                    "mobil": null,
                    "website": null,
                    "fax": null,
                    "kommunikationen": []
                  },
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "ameise_id": {
                      "type": "string",
                      "example": "57000"
                    },
                    "nachname": {
                      "type": "string",
                      "example": "Bader"
                    },
                    "vorname": {
                      "type": "string",
                      "example": "Jolanta"
                    },
                    "titel": {
                      "type": "string",
                      "example": "Herr Prof."
                    },
                    "strasse": {
                      "type": "string",
                      "example": "Förstergasse 20a"
                    },
                    "plz": {
                      "type": "string",
                      "example": "38813"
                    },
                    "ort": {
                      "type": "string",
                      "example": "Saarlouis"
                    },
                    "geburtsdatum": {
                      "type": "string",
                      "example": "1990-07-22T10:45:18.000000Z"
                    },
                    "beruf": {
                      "type": "string",
                      "example": ""
                    },
                    "per_du": {
                      "type": "boolean",
                      "example": true
                    },
                    "nationalitaet": {
                      "type": "string",
                      "example": ""
                    },
                    "benutzername_simplr": {
                      "type": "string",
                      "example": "amalie.pietsch"
                    },
                    "verstorben": {
                      "type": "boolean",
                      "example": false
                    },
                    "vermittler_id": {
                      "type": "string",
                      "example": "XML4V3"
                    },
                    "anrede_id": {
                      "type": "integer",
                      "example": 10
                    },
                    "anrede": {
                      "type": "string",
                      "example": "sed"
                    },
                    "juristische_person": {
                      "type": "boolean",
                      "example": false
                    },
                    "land_id": {
                      "type": "string",
                      "example": "AT"
                    },
                    "land": {
                      "type": "string",
                      "example": "Costa Rica"
                    },
                    "rechtsform_id": {
                      "type": "integer",
                      "example": 0
                    },
                    "rechtsform": {
                      "type": "string",
                      "example": null
                    },
                    "email": {
                      "type": "string",
                      "example": null
                    },
                    "telefon": {
                      "type": "string",
                      "example": null
                    },
                    "mobil": {
                      "type": "string",
                      "example": null
                    },
                    "website": {
                      "type": "string",
                      "example": null
                    },
                    "fax": {
                      "type": "string",
                      "example": null
                    },
                    "kommunikationen": {
                      "type": "array",
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Multiple Records for update found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Could not identify sole Kunde to update, 2 results found via _search.",
                    "count": 2,
                    "code": "MULTIPLE_RECORDS_FOUND",
                    "ameise_ids": [
                      "123456789",
                      "987654321"
                    ]
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Could not identify sole Kunde to update, 2 results found via _search."
                    },
                    "count": {
                      "type": "integer",
                      "example": 2
                    },
                    "code": {
                      "type": "string",
                      "example": "MULTIPLE_RECORDS_FOUND"
                    },
                    "ameise_ids": {
                      "type": "array",
                      "example": [
                        "123456789",
                        "987654321"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Kunde"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vermittler_id": {
                    "type": "string",
                    "description": "Standard-Wert ist der Vermittler des Ameise Benutzers mit dem die API-Verbidung erstellt wurde. The <code>ameise_id</code> of an existing record in the ameise_vermittler table.",
                    "example": null,
                    "nullable": true
                  },
                  "anrede_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_anreden table.",
                    "example": null,
                    "nullable": false
                  },
                  "vorname": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld den Ansprechpartner. value darf maximal 255 Zeichen haben.",
                    "example": "jjuyjlbqswiwvcmy",
                    "nullable": true
                  },
                  "nachname": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld den Firmennamen. value darf maximal 255 Zeichen haben.",
                    "example": "vipndicqibuxjajf",
                    "nullable": true
                  },
                  "titel": {
                    "type": "string",
                    "description": "Wird nicht verwendet, wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist. value darf maximal 255 Zeichen haben.",
                    "example": "ulljxbbggsfxqdre",
                    "nullable": true
                  },
                  "strasse": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "nloimiqxcpiayhne",
                    "nullable": true
                  },
                  "plz": {
                    "type": "string",
                    "description": "value muss zwischen 4 und 5 Stellen haben.",
                    "example": "56957",
                    "nullable": true
                  },
                  "ort": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "uyjlbqswiwvcmyvi",
                    "nullable": true
                  },
                  "land_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_laender table.",
                    "example": null,
                    "nullable": false
                  },
                  "geburtsdatum": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld das Gründungsdatum. Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                    "example": "2025-09-25,25.09.2025",
                    "nullable": true
                  },
                  "beruf": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld die Branche. value darf maximal 255 Zeichen haben.",
                    "example": "pndicqibuxjajful",
                    "nullable": true
                  },
                  "per_du": {
                    "type": "boolean",
                    "description": "Wird aktuell nicht an die Ameise übergeben.",
                    "example": true,
                    "nullable": false
                  },
                  "nationalitaet": {
                    "type": "string",
                    "description": "Wird aktuell nicht an die Ameise übergeben. value darf maximal 255 Zeichen haben.",
                    "example": "ljxbbggsfxqdrenl",
                    "nullable": true
                  },
                  "rechtsform_id": {
                    "type": "string",
                    "description": "Wird aktuell nicht an die Ameise übergeben. Benötigt wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist. The <code>ameise_id</code> of an existing record in the ameise_rechtsformen table.",
                    "example": null,
                    "nullable": true
                  },
                  "benutzername_simplr": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "oimiqxcpiayhneos",
                    "nullable": true
                  },
                  "verstorben": {
                    "type": "boolean",
                    "description": "Wird aktuell nicht an die Ameise übergeben.",
                    "example": true,
                    "nullable": false
                  },
                  "kommunikation": {
                    "type": "object",
                    "description": "Alle Standard-Kommunikationsdaten für diesen Kunden.",
                    "example": {
                      "email": "info@muster.test",
                      "website": "https://url.test"
                    },
                    "nullable": true,
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "value muss eine gültige E-Mail-Adresse sein.",
                        "example": "info@muster.test",
                        "nullable": true
                      },
                      "telefon": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "mobil": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "website": {
                        "type": "string",
                        "description": "Must be a valid URL.",
                        "example": "https://url.test",
                        "nullable": true
                      },
                      "fax": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      }
                    }
                  },
                  "details": {
                    "type": "object",
                    "description": "Kunden-Details als Objekt mit Feld-ID Schlüssel und dem entsprechenden Wert.",
                    "example": {
                      "feld_1_float": 12.2,
                      "feld_2_int": 3,
                      "feld_3_text": "test",
                      "feld_4_bool": false,
                      "feld_5_date": "2024-01-23"
                    },
                    "nullable": true,
                    "properties": {
                      "feld_id_typ_text": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_boolean": {
                        "type": "boolean",
                        "description": "",
                        "example": true,
                        "nullable": true
                      },
                      "feld_id_typ_auswahl": {
                        "type": "string",
                        "description": "",
                        "example": "est",
                        "nullable": true,
                        "enum": [
                          "quo",
                          "dignissimos",
                          "qui",
                          "est",
                          "fugit"
                        ]
                      },
                      "feld_id_typ_zahl": {
                        "type": "integer",
                        "description": "",
                        "example": 16,
                        "nullable": true
                      },
                      "feld_id_typ_betrag_2": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_datum": {
                        "type": "string",
                        "description": "Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                        "example": "2025-09-25,25.09.2025",
                        "nullable": true
                      }
                    }
                  },
                  "_search": {
                    "type": "array",
                    "description": "Parameter names which should be used to search for existing customer. Allows kommunikation.email_**any** to match any kontext (private, business). Furthermore customer may have the kommunikation.* property not as the default kommunikation value.",
                    "example": [
                      "vorname",
                      "nachname",
                      "kommunikation.email_private"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "_default": {
                    "type": "object",
                    "description": "Default parameters that should be set only for newly created customer (if not passed via other parameters).",
                    "example": {
                      "anrede_id": "1",
                      "land_id": "DE"
                    },
                    "nullable": false,
                    "properties": {}
                  }
                },
                "required": [
                  "_search"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/kunde/{kunde_ameise_id}": {
      "get": {
        "summary": "Show Kunde",
        "operationId": "showKunde",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "with-kommunikationen",
            "description": "Load and return kommunikationen and default fields for kunde.",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Load and return kommunikationen and default fields for kunde.",
              "example": true,
              "nullable": false
            }
          },
          {
            "in": "query",
            "name": "with-details",
            "description": "Load and return details for kunde.",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Load and return details for kunde.",
              "example": true,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "created_at": "2024-02-21T15:12:22.000000Z",
                    "updated_at": "2024-02-21T15:12:22.000000Z",
                    "ameise_id": "57000",
                    "nachname": "Bader",
                    "vorname": "Jolanta",
                    "titel": "Herr Prof.",
                    "strasse": "Förstergasse 20a",
                    "plz": "38813",
                    "ort": "Saarlouis",
                    "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                    "beruf": "",
                    "per_du": true,
                    "nationalitaet": "",
                    "benutzername_simplr": "amalie.pietsch",
                    "verstorben": false,
                    "vermittler_id": "XML4V3",
                    "anrede_id": 10,
                    "anrede": "sed",
                    "juristische_person": false,
                    "land_id": "AT",
                    "land": "Costa Rica",
                    "rechtsform_id": 0,
                    "rechtsform": null,
                    "email": null,
                    "telefon": null,
                    "mobil": null,
                    "website": null,
                    "fax": null,
                    "kommunikationen": []
                  },
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "ameise_id": {
                      "type": "string",
                      "example": "57000"
                    },
                    "nachname": {
                      "type": "string",
                      "example": "Bader"
                    },
                    "vorname": {
                      "type": "string",
                      "example": "Jolanta"
                    },
                    "titel": {
                      "type": "string",
                      "example": "Herr Prof."
                    },
                    "strasse": {
                      "type": "string",
                      "example": "Förstergasse 20a"
                    },
                    "plz": {
                      "type": "string",
                      "example": "38813"
                    },
                    "ort": {
                      "type": "string",
                      "example": "Saarlouis"
                    },
                    "geburtsdatum": {
                      "type": "string",
                      "example": "1990-07-22T10:45:18.000000Z"
                    },
                    "beruf": {
                      "type": "string",
                      "example": ""
                    },
                    "per_du": {
                      "type": "boolean",
                      "example": true
                    },
                    "nationalitaet": {
                      "type": "string",
                      "example": ""
                    },
                    "benutzername_simplr": {
                      "type": "string",
                      "example": "amalie.pietsch"
                    },
                    "verstorben": {
                      "type": "boolean",
                      "example": false
                    },
                    "vermittler_id": {
                      "type": "string",
                      "example": "XML4V3"
                    },
                    "anrede_id": {
                      "type": "integer",
                      "example": 10
                    },
                    "anrede": {
                      "type": "string",
                      "example": "sed"
                    },
                    "juristische_person": {
                      "type": "boolean",
                      "example": false
                    },
                    "land_id": {
                      "type": "string",
                      "example": "AT"
                    },
                    "land": {
                      "type": "string",
                      "example": "Costa Rica"
                    },
                    "rechtsform_id": {
                      "type": "integer",
                      "example": 0
                    },
                    "rechtsform": {
                      "type": "string",
                      "example": null
                    },
                    "email": {
                      "type": "string",
                      "example": null
                    },
                    "telefon": {
                      "type": "string",
                      "example": null
                    },
                    "mobil": {
                      "type": "string",
                      "example": null
                    },
                    "website": {
                      "type": "string",
                      "example": null
                    },
                    "fax": {
                      "type": "string",
                      "example": null
                    },
                    "kommunikationen": {
                      "type": "array",
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Kunde"
        ]
      },
      "put": {
        "summary": "Update Kunde",
        "operationId": "updateKunde",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "created_at": "2024-02-21T15:12:22.000000Z",
                    "updated_at": "2024-02-21T15:12:22.000000Z",
                    "ameise_id": "57000",
                    "nachname": "Bader",
                    "vorname": "Jolanta",
                    "titel": "Herr Prof.",
                    "strasse": "Förstergasse 20a",
                    "plz": "38813",
                    "ort": "Saarlouis",
                    "geburtsdatum": "1990-07-22T10:45:18.000000Z",
                    "beruf": "",
                    "per_du": true,
                    "nationalitaet": "",
                    "benutzername_simplr": "amalie.pietsch",
                    "verstorben": false,
                    "vermittler_id": "XML4V3",
                    "anrede_id": 10,
                    "anrede": "sed",
                    "juristische_person": false,
                    "land_id": "AT",
                    "land": "Costa Rica",
                    "rechtsform_id": 0,
                    "rechtsform": null,
                    "email": null,
                    "telefon": null,
                    "mobil": null,
                    "website": null,
                    "fax": null,
                    "kommunikationen": []
                  },
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2024-02-21T15:12:22.000000Z"
                    },
                    "ameise_id": {
                      "type": "string",
                      "example": "57000"
                    },
                    "nachname": {
                      "type": "string",
                      "example": "Bader"
                    },
                    "vorname": {
                      "type": "string",
                      "example": "Jolanta"
                    },
                    "titel": {
                      "type": "string",
                      "example": "Herr Prof."
                    },
                    "strasse": {
                      "type": "string",
                      "example": "Förstergasse 20a"
                    },
                    "plz": {
                      "type": "string",
                      "example": "38813"
                    },
                    "ort": {
                      "type": "string",
                      "example": "Saarlouis"
                    },
                    "geburtsdatum": {
                      "type": "string",
                      "example": "1990-07-22T10:45:18.000000Z"
                    },
                    "beruf": {
                      "type": "string",
                      "example": ""
                    },
                    "per_du": {
                      "type": "boolean",
                      "example": true
                    },
                    "nationalitaet": {
                      "type": "string",
                      "example": ""
                    },
                    "benutzername_simplr": {
                      "type": "string",
                      "example": "amalie.pietsch"
                    },
                    "verstorben": {
                      "type": "boolean",
                      "example": false
                    },
                    "vermittler_id": {
                      "type": "string",
                      "example": "XML4V3"
                    },
                    "anrede_id": {
                      "type": "integer",
                      "example": 10
                    },
                    "anrede": {
                      "type": "string",
                      "example": "sed"
                    },
                    "juristische_person": {
                      "type": "boolean",
                      "example": false
                    },
                    "land_id": {
                      "type": "string",
                      "example": "AT"
                    },
                    "land": {
                      "type": "string",
                      "example": "Costa Rica"
                    },
                    "rechtsform_id": {
                      "type": "integer",
                      "example": 0
                    },
                    "rechtsform": {
                      "type": "string",
                      "example": null
                    },
                    "email": {
                      "type": "string",
                      "example": null
                    },
                    "telefon": {
                      "type": "string",
                      "example": null
                    },
                    "mobil": {
                      "type": "string",
                      "example": null
                    },
                    "website": {
                      "type": "string",
                      "example": null
                    },
                    "fax": {
                      "type": "string",
                      "example": null
                    },
                    "kommunikationen": {
                      "type": "array",
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Kunde"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vermittler_id": {
                    "type": "string",
                    "description": "Standard-Wert ist der Vermittler des Ameise Benutzers mit dem die API-Verbidung erstellt wurde. The <code>ameise_id</code> of an existing record in the ameise_vermittler table.",
                    "example": null,
                    "nullable": true
                  },
                  "anrede_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_anreden table.",
                    "example": null,
                    "nullable": false
                  },
                  "vorname": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld den Ansprechpartner. value darf maximal 255 Zeichen haben.",
                    "example": "jjuyjlbqswiwvcmy",
                    "nullable": true
                  },
                  "nachname": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld den Firmennamen. value darf maximal 255 Zeichen haben.",
                    "example": "vipndicqibuxjajf",
                    "nullable": true
                  },
                  "titel": {
                    "type": "string",
                    "description": "Wird nicht verwendet, wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist. value darf maximal 255 Zeichen haben.",
                    "example": "ulljxbbggsfxqdre",
                    "nullable": true
                  },
                  "strasse": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "nloimiqxcpiayhne",
                    "nullable": true
                  },
                  "plz": {
                    "type": "string",
                    "description": "value muss zwischen 4 und 5 Stellen haben.",
                    "example": "56957",
                    "nullable": true
                  },
                  "ort": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "uyjlbqswiwvcmyvi",
                    "nullable": true
                  },
                  "land_id": {
                    "type": "string",
                    "description": "The <code>ameise_id</code> of an existing record in the ameise_laender table.",
                    "example": null,
                    "nullable": false
                  },
                  "geburtsdatum": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld das Gründungsdatum. Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                    "example": "2025-09-25,25.09.2025",
                    "nullable": true
                  },
                  "beruf": {
                    "type": "string",
                    "description": "Wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist bezeichnet dieses Feld die Branche. value darf maximal 255 Zeichen haben.",
                    "example": "pndicqibuxjajful",
                    "nullable": true
                  },
                  "per_du": {
                    "type": "boolean",
                    "description": "Wird aktuell nicht an die Ameise übergeben.",
                    "example": false,
                    "nullable": false
                  },
                  "nationalitaet": {
                    "type": "string",
                    "description": "Wird aktuell nicht an die Ameise übergeben. value darf maximal 255 Zeichen haben.",
                    "example": "ljxbbggsfxqdrenl",
                    "nullable": true
                  },
                  "rechtsform_id": {
                    "type": "string",
                    "description": "Wird aktuell nicht an die Ameise übergeben. Benötigt wenn anrede_id zu einer Anrede gehört, wo juristische_person = true ist. The <code>ameise_id</code> of an existing record in the ameise_rechtsformen table.",
                    "example": null,
                    "nullable": true
                  },
                  "benutzername_simplr": {
                    "type": "string",
                    "description": "value darf maximal 255 Zeichen haben.",
                    "example": "oimiqxcpiayhneos",
                    "nullable": true
                  },
                  "verstorben": {
                    "type": "boolean",
                    "description": "Wird aktuell nicht an die Ameise übergeben.",
                    "example": true,
                    "nullable": false
                  },
                  "kommunikation": {
                    "type": "object",
                    "description": "Alle Standard-Kommunikationsdaten für diesen Kunden.",
                    "example": {
                      "email": "info@muster.test",
                      "website": "https://url.test"
                    },
                    "nullable": true,
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "value muss eine gültige E-Mail-Adresse sein.",
                        "example": "info@muster.test",
                        "nullable": true
                      },
                      "telefon": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "mobil": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "website": {
                        "type": "string",
                        "description": "Must be a valid URL.",
                        "example": "https://url.test",
                        "nullable": true
                      },
                      "fax": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      }
                    }
                  },
                  "details": {
                    "type": "object",
                    "description": "Kunden-Details als Objekt mit Feld-ID Schlüssel und dem entsprechenden Wert.",
                    "example": {
                      "feld_1_float": 12.2,
                      "feld_2_int": 3,
                      "feld_3_text": "test",
                      "feld_4_bool": false,
                      "feld_5_date": "2024-01-23"
                    },
                    "nullable": true,
                    "properties": {
                      "feld_id_typ_text": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_boolean": {
                        "type": "boolean",
                        "description": "",
                        "example": true,
                        "nullable": true
                      },
                      "feld_id_typ_auswahl": {
                        "type": "string",
                        "description": "",
                        "example": "illum",
                        "nullable": true,
                        "enum": [
                          "illum",
                          "accusantium",
                          "nesciunt",
                          "velit",
                          "est"
                        ]
                      },
                      "feld_id_typ_zahl": {
                        "type": "integer",
                        "description": "",
                        "example": 16,
                        "nullable": true
                      },
                      "feld_id_typ_betrag_2": {
                        "type": "string",
                        "description": "",
                        "example": null,
                        "nullable": true
                      },
                      "feld_id_typ_datum": {
                        "type": "string",
                        "description": "Must be a valid date in the format <code>Y-m-d,d.m.Y</code>.",
                        "example": "2025-09-25,25.09.2025",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "kunde_ameise_id",
          "description": "The ID of the kunde ameise.",
          "example": "57000",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/kunde/{kunde_ameise_id}/archiveintrag": {
      "post": {
        "summary": "Add Archiveintrag",
        "operationId": "addArchiveintrag",
        "description": "When `typ` is not `dokument` body can be sent as JSON.",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Archiveintrag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "Id": "12345",
                    "Typ": "dokument",
                    "Datum": "2024-03-21T09:09:09+02:00",
                    "Betreff": "Titel",
                    "Zuordnungen": [
                      {
                        "Typ": "kunde",
                        "Id": "12345"
                      }
                    ],
                    "Metadaten": [
                      {
                        "Value": "_kundensichtbar",
                        "Text": "0"
                      }
                    ],
                    "Tags": [
                      "Tag"
                    ]
                  },
                  "properties": {
                    "Id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "Typ": {
                      "type": "string",
                      "example": "dokument"
                    },
                    "Datum": {
                      "type": "string",
                      "example": "2024-03-21T09:09:09+02:00"
                    },
                    "Betreff": {
                      "type": "string",
                      "example": "Titel"
                    },
                    "Zuordnungen": {
                      "type": "array",
                      "example": [
                        {
                          "Typ": "kunde",
                          "Id": "12345"
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "Typ": {
                            "type": "string",
                            "example": "kunde"
                          },
                          "Id": {
                            "type": "string",
                            "example": "12345"
                          }
                        }
                      }
                    },
                    "Metadaten": {
                      "type": "array",
                      "example": [
                        {
                          "Value": "_kundensichtbar",
                          "Text": "0"
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "Value": {
                            "type": "string",
                            "example": "_kundensichtbar"
                          },
                          "Text": {
                            "type": "string",
                            "example": "0"
                          }
                        }
                      }
                    },
                    "Tags": {
                      "type": "array",
                      "example": [
                        "Tag"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ameise API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Unknown, proxies response from Ameise API if response is not OK"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Kunde"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "typ": {
                    "type": "string",
                    "description": "",
                    "example": "persoenlich",
                    "nullable": false,
                    "enum": [
                      "dokument",
                      "fax",
                      "email",
                      "sms",
                      "telefon",
                      "brief",
                      "persoenlich",
                      "chat",
                      "sonstiges"
                    ]
                  },
                  "betreff": {
                    "type": "string",
                    "description": "Titel des Kontakthistorien-Eintrag oder Dateiname. value darf maximal 100 Zeichen haben.",
                    "example": "jjuyjlbqswiwvcmy",
                    "nullable": false
                  },
                  "content": {
                    "type": "string",
                    "description": "This field is required unless <code>typ</code> is in <code>dokument</code>.",
                    "example": "quia",
                    "nullable": true
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "This field is required when <code>typ</code> is <code>dokument</code>. Must be a file. value darf maximal 10240 Kilobytes groß sein.",
                    "nullable": true
                  },
                  "datum": {
                    "type": "string",
                    "description": "Must be a valid date in the format <code>Y-m-d\\TH:i:sP</code>.",
                    "example": "2025-09-25T15:17:22+00:00",
                    "nullable": true
                  },
                  "zuordnung": {
                    "type": "object",
                    "description": "",
                    "example": [],
                    "nullable": false,
                    "properties": {
                      "vertrags_id": {
                        "type": "string",
                        "description": "The <code>ameise_id</code> of an existing record in the ameise_vertraege table.",
                        "example": null,
                        "nullable": true
                      },
                      "sparte_id": {
                        "type": "string",
                        "description": "The <code>ameise_id</code> of an existing record in the ameise_sparten table.",
                        "example": null,
                        "nullable": true
                      }
                    }
                  },
                  "meta": {
                    "type": "object",
                    "description": "",
                    "example": [],
                    "nullable": false,
                    "properties": {
                      "kundensichtbar": {
                        "type": "boolean",
                        "description": "",
                        "example": false,
                        "nullable": true
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "",
                    "example": [
                      "quia"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "typ",
                  "betreff"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "kunde_ameise_id",
          "description": "The ID of the kunde ameise.",
          "example": "57000",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/anreden": {
      "get": {
        "summary": "Anreden",
        "operationId": "anreden",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/anreden?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/anreden?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/anreden?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/anreden?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/anreden?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/anreden?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/anreden?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/anreden?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/anreden?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/anreden?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/anreden?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/anreden?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/anreden?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/anreden?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/gesellschaften": {
      "get": {
        "summary": "Gesellschaften",
        "operationId": "gesellschaften",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/gesellschaften?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/gesellschaften?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/gesellschaften?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/gesellschaften?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/gesellschaften?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/gesellschaften?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/gesellschaften?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/kunden_detail_felder": {
      "get": {
        "summary": "Kunden-Detail-Felder",
        "operationId": "kundenDetailFelder",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/kunden_detail_felder?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/kunden_detail_felder?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/kunden_detail_felder?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/kunden_detail_felder?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/kunden_detail_felder?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/kunden_detail_felder?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/kunden_detail_felder?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/laender": {
      "get": {
        "summary": "Länder",
        "operationId": "lnder",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/laender?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/laender?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/laender?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/laender?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/laender?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/laender?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/laender?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/laender?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/laender?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/laender?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/laender?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/laender?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/laender?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/laender?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/rechtsformen": {
      "get": {
        "summary": "Rechtsformen",
        "operationId": "rechtsformen",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/rechtsformen?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/rechtsformen?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/rechtsformen?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/rechtsformen?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/rechtsformen?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/rechtsformen?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/rechtsformen?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/sparten": {
      "get": {
        "summary": "Sparten",
        "operationId": "sparten",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/sparten?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/sparten?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/sparten?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/sparten?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/sparten?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/sparten?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/sparten?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/sparten?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/sparten?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/sparten?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/sparten?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/sparten?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/sparten?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/sparten?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/status": {
      "get": {
        "summary": "Status",
        "operationId": "status",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/status?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/status?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/status?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/status?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/status?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/status?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/status?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/status?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/status?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/status?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/status?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/status?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/status?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/status?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/vermittler": {
      "get": {
        "summary": "Vermittler",
        "operationId": "vermittler",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/vermittler?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/vermittler?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/vermittler?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/vermittler?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/vermittler?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/vermittler?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/vermittler?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/vermittler?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/vermittler?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/vermittler?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/vermittler?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/vermittler?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/vermittler?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/vermittler?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/zahlweisen": {
      "get": {
        "summary": "Zahlweisen",
        "operationId": "zahlweisen",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "per_page",
            "description": "Enables Pagination and returns results paginated by given per_page.",
            "example": 100,
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Enables Pagination and returns results paginated by given per_page.",
              "example": 100,
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Non-Paginated Results",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ameise_id": ""
                        }
                      ]
                    },
                    {
                      "description": "Paginated Results",
                      "type": "object",
                      "example": {
                        "current_page": 1,
                        "data": [
                          {
                            "ameise_id": ""
                          }
                        ],
                        "first_page_url": "{base_url}/api/{tenant}/zahlweisen?page=1&per_page=5",
                        "from": 1,
                        "last_page": 2,
                        "last_page_url": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page=5",
                        "links": [
                          {
                            "url": null,
                            "label": "&laquo; Zurück",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/zahlweisen?page=1&per_page=5",
                            "label": "1",
                            "active": true
                          },
                          {
                            "url": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page=5",
                            "label": "2",
                            "active": false
                          },
                          {
                            "url": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page=5",
                            "label": "Weiter &raquo;",
                            "active": false
                          }
                        ],
                        "next_page_url": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page . =5",
                        "path": "https://app.qonekto.de/api/{tenant}/zahlweisen?per_page=5",
                        "per_page": 5,
                        "prev_page_url": null,
                        "to": 50,
                        "total": 100
                      },
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "example": 1
                        },
                        "data": {
                          "type": "array",
                          "example": [
                            {
                              "ameise_id": ""
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "ameise_id": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        },
                        "first_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/zahlweisen?page=1&per_page=5"
                        },
                        "from": {
                          "type": "integer",
                          "example": 1
                        },
                        "last_page": {
                          "type": "integer",
                          "example": 2
                        },
                        "last_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page=5"
                        },
                        "links": {
                          "type": "array",
                          "example": [
                            {
                              "url": null,
                              "label": "&laquo; Zurück",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/zahlweisen?page=1&per_page=5",
                              "label": "1",
                              "active": true
                            },
                            {
                              "url": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page=5",
                              "label": "2",
                              "active": false
                            },
                            {
                              "url": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page=5",
                              "label": "Weiter &raquo;",
                              "active": false
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "example": null
                              },
                              "label": {
                                "type": "string",
                                "example": "&laquo; Zurück"
                              },
                              "active": {
                                "type": "boolean",
                                "example": false
                              }
                            }
                          }
                        },
                        "next_page_url": {
                          "type": "string",
                          "example": "{base_url}/api/{tenant}/zahlweisen?page=2&per_page . =5"
                        },
                        "path": {
                          "type": "string",
                          "example": "https://app.qonekto.de/api/{tenant}/zahlweisen?per_page=5"
                        },
                        "per_page": {
                          "type": "integer",
                          "example": 5
                        },
                        "prev_page_url": {
                          "type": "string",
                          "example": null
                        },
                        "to": {
                          "type": "integer",
                          "example": 50
                        },
                        "total": {
                          "type": "integer",
                          "example": 100
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Listen"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/panda/customer-links": {
      "get": {
        "summary": "Get all customer Links",
        "operationId": "getAllCustomerLinks",
        "description": "Retrieves all customer links created by the currently logged-in broker that have not been processed yet.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of customer links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    {
                      "hash": "string",
                      "type": "basic_analysis",
                      "customerId": "0",
                      "tenderId": null,
                      "insuranceLineId": null,
                      "createdAt": "datetime",
                      "isFinishedByCustomer": "boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": "int",
                    "message": "string"
                  },
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "int"
                    },
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Panda"
        ]
      },
      "post": {
        "summary": "Create a customer link",
        "operationId": "createACustomerLink",
        "description": "If customer link for given params already exists, it will be disabled and new link will be created",
        "parameters": [
          {
            "in": "query",
            "name": "import-customer",
            "description": "If query parameter exists, customer will be imported into Panda if it does not exist yet before calling function",
            "example": "quia",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If query parameter exists, customer will be imported into Panda if it does not exist yet before calling function",
              "example": "quia",
              "nullable": false
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "hash": "string"
                  },
                  "properties": {
                    "hash": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": "int",
                    "message": "string"
                  },
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "int"
                    },
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Panda"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "",
                    "example": "basic_analysis",
                    "nullable": false,
                    "enum": [
                      "basic_analysis",
                      "risk"
                    ]
                  },
                  "customerId": {
                    "type": "integer",
                    "description": "",
                    "example": 16,
                    "nullable": false
                  },
                  "tenderId": {
                    "type": "string",
                    "description": "This field is required when <code>type</code> is <code>risk</code>.",
                    "example": null,
                    "nullable": true
                  },
                  "handleEmails": {
                    "type": "boolean",
                    "description": "",
                    "example": true,
                    "nullable": false
                  },
                  "requireAnswers": {
                    "type": "boolean",
                    "description": "",
                    "example": false,
                    "nullable": false
                  },
                  "email": {
                    "type": "string",
                    "description": "value muss eine gültige E-Mail-Adresse sein.",
                    "example": "ibrahim.murazik@example.org",
                    "nullable": true
                  },
                  "message": {
                    "type": "string",
                    "description": "",
                    "example": null,
                    "nullable": true
                  }
                },
                "required": [
                  "type",
                  "customerId",
                  "handleEmails",
                  "requireAnswers"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/panda/tenders": {
      "get": {
        "summary": "Get active tenders for a customer",
        "operationId": "getActiveTendersForACustomer",
        "description": "Retrieves all active tenders for a customer",
        "parameters": [
          {
            "in": "query",
            "name": "customerId",
            "description": "Customer Ameise ID",
            "example": "quia",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Customer Ameise ID",
              "example": "quia",
              "nullable": false
            }
          },
          {
            "in": "query",
            "name": "insuranceLineId",
            "description": "Panda Insurance Line ID, see \"Create a tender\" for values",
            "example": "quia",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Panda Insurance Line ID, see \"Create a tender\" for values",
              "example": "quia",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of customer links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    {
                      "id": "string",
                      "insuranceLine": {
                        "id": "integer",
                        "name": "string"
                      },
                      "inquiries": [
                        {
                          "insuranceCompany": {
                            "id": "integer",
                            "name": "string"
                          },
                          "status": "sent|in_progress|addition|question|question_answered|rejection|rejection_answered|offer|offer_answered|order"
                        }
                      ],
                      "hasBackOffice": "boolean"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": "int",
                    "message": "string"
                  },
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "int"
                    },
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Panda"
        ]
      },
      "post": {
        "summary": "Create a tender",
        "operationId": "createATender",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "import-customer",
            "description": "If query parameter exists, customer will be imported into Panda if it does not exist yet before calling function",
            "example": "quia",
            "required": false,
            "schema": {
              "type": "string",
              "description": "If query parameter exists, customer will be imported into Panda if it does not exist yet before calling function",
              "example": "quia",
              "nullable": false
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "id": "string"
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": "int",
                    "message": "string"
                  },
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "int"
                    },
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Panda"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "integer",
                    "description": "",
                    "example": 16,
                    "nullable": false
                  },
                  "insuranceLineId": {
                    "type": "string",
                    "description": "Panda Insurance Line ID, possible values:<br>\n1: Betriebshaftpflicht<br>\n2: Geschäftsinhalt<br>\n3: gewerbliche Rechtsschutz<br>\n4: Cyber<br>\n5: gewerbliches Gebäude<br>\n80: MultiRisk<br>\n6: Vermögensschadenhaftpflicht<br>\n7: Berufshaftpflicht für Ärzte<br>\n8: Maschinen (stationär)<br>\n9: Berufshaftpflicht für Architekten und Ingenieure<br>\n11: Unternehmens D&O<br>\n12: persönliche D&O<br>\n17: Elektronik<br>\n28: Warenkredit<br>\n27: Mietkaution<br>\n15: Vertrauensschaden<br>\n26: Kaution<br>\n16: Glasbruch<br>\n24: Warentransport<br>\n23: Autoinhalt (Werkverkehr)<br>\n10: Maschinen (mobil)<br>\n20: Montage<br>\n41: KFZ Handel-Handwerk<br>\n38: Gruppen-Unfall<br>\n25: Verkehrshaftung<br>\n31: Betriebskosten-/Praxisausfall (infolge Krankheit)<br>\n34: Berufshaftpflicht für Architekten und Ingenieure (Objektschadendeckung)<br>\n14: Bauherrenhaftpflicht (gewerblich)<br>\n21: Bauleistung (gewerblich)<br>\n47: KFZ Flotten<br>\n48: Private Krankenvollversicherung<br>\n49: Berufsunfähigkeit<br>\n50: Wohngebäude<br>\n51: Risikoleben<br>\n52: Betriebsunterbrechung (MBU)<br>\n53: KV Zusatz<br>\n54: PKW (BETA)<br>\n55: Hausrat (BETA)<br>\n56: Tierkrankenversicherung (BETA)<br>\n57: Unfallversicherung (BETA)<br>\n58: Privat-Rechtsschutz (BETA)<br>\n59: Veranstaltungshaftpflicht (BETA)<br>\n61: KFZ Old / Youngtimer<br>\n62: KFZ Premium Cars / Exoten<br>\n63: Privathaftpflicht<br>\n64: Hundehalterhaftpflicht<br>\n65: Pferdehalterhaftpflicht",
                    "example": "quia",
                    "nullable": false
                  }
                },
                "required": [
                  "customerId",
                  "insuranceLineId"
                ]
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/panda/customers/{ameiseId}/import": {
      "post": {
        "summary": "Imports an Ameise customer into Panda",
        "operationId": "importsAnAmeiseCustomerIntoPanda",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Customer created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "customerId": "string"
                  },
                  "properties": {
                    "customerId": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": "int",
                    "message": "string"
                  },
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "int"
                    },
                    "message": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "CRM Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Ameise-API is not connected."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ameise-API is not connected."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Panda"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "ameiseId",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/{tenant}/pipeline/{pipeline_id}/trigger-from-crm": {
      "get": {
        "summary": "Trigger Pipeline Import From CRM",
        "operationId": "triggerPipelineImportFromCRM",
        "description": "",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "example": "quia",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "example": "quia",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "OK"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not supported",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Pipeline Object Type does not support external changes."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Pipeline Object Type does not support external changes."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Pipeline does not belong to Tenant."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Pipeline does not belong to Tenant."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "CRM Error",
                      "type": "object",
                      "example": {
                        "message": "Pipeline CRM Connection is invalid."
                      },
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Pipeline CRM Connection is invalid."
                        }
                      }
                    },
                    {
                      "description": "CRM Error",
                      "type": "object",
                      "example": {
                        "message": "Pipeline CRM Connection is not connected."
                      },
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Pipeline CRM Connection is not connected."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "423": {
            "description": "Disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Pipeline is not enabled."
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Pipeline is not enabled."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Pipeline"
        ],
        "security": []
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "pipeline_id",
          "description": "The ID of the pipeline.",
          "example": 16,
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/api/{tenant}/whoami": {
      "get": {
        "summary": "Who Am I?",
        "operationId": "whoAmI",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tenant and API Token Metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Tenant",
                    "slug": "tenant",
                    "token": {
                      "name": "Token ABC",
                      "created_at": "2024-02-07T11:34:31+00:00",
                      "expires_at": null
                    }
                  },
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Tenant"
                    },
                    "slug": {
                      "type": "string",
                      "example": "tenant"
                    },
                    "token": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Token ABC"
                        },
                        "created_at": {
                          "type": "string",
                          "example": "2024-02-07T11:34:31+00:00"
                        },
                        "expires_at": {
                          "type": "string",
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No API Token passed via Authorization Header or as _token parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "No API Token passed via Authorization Header or as _token parameter.",
                    "code": "NOT_AUTHORIZED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No API Token passed via Authorization Header or as _token parameter."
                    },
                    "code": {
                      "type": "string",
                      "example": "NOT_AUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tenant does not exist or was disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Tenant does not exist or was disabled.",
                    "code": "TENANT_MISSING_OR_DISABLED"
                  },
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tenant does not exist or was disabled."
                    },
                    "code": {
                      "type": "string",
                      "example": "TENANT_MISSING_OR_DISABLED"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Misc"
        ],
        "security": []
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "description": "",
          "example": "quia",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  }
}